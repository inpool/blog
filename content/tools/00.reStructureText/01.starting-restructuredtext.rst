~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
reStructuredText(一)——初探
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:date: 2016-05-13 22:34
:category: 工具
:tags: reStructuredText, python, pelican
:slug: starting-restructuredtext
:summary: reStructuredText是python设计用来写文档的一种非常简单的标记语言，使用
          reStructuredText写的文档，可以转换成HTML、PDF、ODT(开放文档类型，相当
          于word)、Latex等许多不同的格式，并且未转换的源文件也是非常便于阅读的。
          虽然原本的设计指示用于写程序文档，但是由于设计得很科学，使其简单而强
          大，已经完全可以使用他用于写书了，事实上，有很多人已经这样用了。这一
          系列文章，我想从全方位介绍一下reStructuredText，主要的内容都来自
          官方文档__ 。
:status: draft

.. __: http://docutils.sourceforge.net/rst.html

这篇先系统的介绍一下reStructuredText(以下简称reST)中的一些基本概念，在后续的文章
中，会大概按照先常用后高级的顺序介绍。

1.基本概念
=============

一个reST的文档由许多 `文档元素` (Body Elements)组成，我们先把文档理解成从上到下
的文本流，一个文档元素就是结构上与上下都没有关联的一块内容，我把他们类比为HTML
中的块元素。文档元素分为段落、列表、表格等很多类别。在文档元素中，有一种特殊的
存在，叫做 `显式标记` (Explicit Markup)，用于对行内标记进行解释、说明，对文档结
构做辅助作用和插入一些复杂的文档元素。

在文档元素内部，我们可以通过一些标记对内容进行格式化和说明，比如加粗、斜体、超
链接、脚注等，为了实现这部分功能，reST引入了 `行内标记` (Inline Markup) 的概念，
我把他们类比为HTML中的内联元素。行内标记也有一种特殊的存在，叫做 `解释文本` 
(Interpreted Text) 。用于辅助行内标记的格式和一些比较复杂的格式定义。

我们从一个reST文档源文件来直观的看一下各类元素：

.. code-block:: RST
    :linenos: inline
    
	示例reST文档
	===================

	标题一
	------------

	*斜体输出* 是一个行内标记，
	**加粗输出** 也是一个行内标记， 
	`` *restructuredtext* `` 依旧是一个行内标记。 
	这个 链接__ 到博客主页，而有些 `链接 <link_>`_
	可以反复引用多次，比如现在换个	名字链接到
	`不带 www 的主页地址 <link_>`_ 。有时候有些链接在文
	中只出现一次，可以不用单独定义链接。比如：
	`百度 <http://baidu.com>`_ 。

	.. __: http://www.inpool.xyz
	.. _link: http://inpool.xyz

========== =========================
第1-2行    文章的主标题，文档元素
第4-5行    文章的一级标题，文档元素
第7-9行    各种不同的行内标记
第10行     行内标记，匿名超链接和命名超链接
第12行     命名超链接，命名的超链接可以多次引用
第14行     直接内部指定URL的超链接
第7-14行   一个段落，文档元素
第16-17行  显示标记，用于指定匿名链接和命名链接的URL
========== =========================

.. note::
	在上面的代码中，为了便于说明，我刻意把文档许多不同的部分分成多行，在实际使用中，
	可以不用分开，输出效果是一样的。在这里列出一小段代码，主要是提供一个感性的认识，
	具体元素的介绍在后面再介绍。


2.空行和缩进
=============

3.转义机制
===========

